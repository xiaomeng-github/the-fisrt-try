import numpy as np
from matplotlib import pyplot as plt
from scipy import signal

a = np.array([15.4,14.6,15.8,14.8,15.0,15.1,15.1,15.0,15.2,15.4,
      14.8,15.0,15.1,14.7,16.0,15.7,15.4,14.5,15.1,15.3,
      15.5,15.1,15.6,15.1,15.1,14.9,15.5,15.3,15.3,15.4,
      15.7,15.2,15.5,15.5,15.6,15.1,15.1,16.0,16.0,16.8,
      16.2,16.2,16.0,15.6,15.9,16.2,16.7,15.8,16.2,15.9,
      15.8,15.5,15.9,16.8,15.5,15.8,15.0,14.9,15.3,16.0,
      16.1,16.5,15.5,15.6,16.1,15.6,16.0,15.4,15.5,15.2,
      15.4,15.6,15.1,15.8,15.5,16.0,15.2,15.8,16.2,16.2,
      15.2,15.7,16.0,16.0,15.7,15.9,15.7,16.7,15.3,16.1])
plt.figure(figsize=(20,8))
# plt.plot(a,'r')
#
#
# #去除趋势
# a_trend=signal.detrend(a,axis=0,type='linear') #如果type=‘constant’,即为距平
# plt.plot(a_trend+a.mean(),'b')
# plt.show()


#设置断点,每份的趋势不同，所以去除线性趋势就比较明显了
x=np.arange(45)
y1=0.1*x+5
y2=-0.1*x+10
a[:45]=a[:45]+y1
a[45:]=a[45:]+y2
plt.plot(a,'b')

a_trend=signal.detrend(a,axis=0,type='linear',bp=44)

plt.plot(a_trend+a.mean(),'r')
plt.show()

